version: "3.9"
name: "homelab"

services:

  
####################
# Back End Services
####################

  caddy:
    container_name: caddy
    build:
      context: ${DOCKERDIR}
      dockerfile: caddy.dockerfile #Custom build which uses duckdns
    profiles:
      - external

    depends_on:
      - crowdsec

    external_links:
      - crowdsec:crowdsec

    networks:
      - web
      - caddy-net

    ports:
      - ${PORT_CADDY_HTTP}:80
      - ${PORT_CADDY_HTTPS}:443

    environment:
      LOG_FILE: ${LOGDIR}/caddy/access.log
      DOMAIN: ${DOMAIN}
      EMAIL: ${EMAIL_ADMIN}
      DUCKDNS_API_TOKEN: ${DUCKDNS_TOKEN}
      
      BOUNCER_CADDY_TOKEN: ${BOUNCER_CADDY_TOKEN}

    labels:
      - diun.enable=true
      - homepage.group=Wild West
      - homepage.name=Caddy
      - homepage.icon=caddy
      - homepage.description=Reverse Proxy

    volumes:
      - ${STATICCONFIGDIR}/caddy/Caddyfile:/etc/caddy/Caddyfile:ro # Required. Needs to be an extension-less file NOT a directory
      - ${CONFIGDIR}:/data # Optional, house for certs. Caddy adds its own /caddy/ directory
      - ${CONFIGDIR}:/config # Optional, JSON Config files. Caddy adds its own /caddy/ directory
      - ${STATICDIR}/tandoor_media:/www/tandoor:ro # recipe image files for Tandoor

    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 128M
    healthcheck:
      test: ["CMD", "caddy", "version"]
    restart: unless-stopped
  
  duckdns:
    container_name: duckdns
    image: ghcr.io/linuxserver/duckdns
    profiles:
      - external

    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      SUBDOMAINS: ${DUCKDNS_SUBDOMAINLIST}
      TOKEN: ${DUCKDNS_TOKEN}

    labels:
      - diun.enable=true
      - homepage.group=Wild West
      - homepage.name=DuckDNS
      - homepage.icon=duckdns
      - homepage.description=Dynamic DNS for external access
    volumes:
      - ${CONFIGDIR}/duckdns:/config #optional

    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 32M
    restart: unless-stopped

  

  
  

  socky_proxy:
    container_name: socky_proxy
    image: ghcr.io/tecnativa/docker-socket-proxy:0.1 # A security-enhanced proxy for the Docker Socket.
    profiles:
      - admin
      - external
      - monitor

    privileged: true
  
    networks:
      - socky_proxy-net

    ports:
      - ${PORT_SOCKY_PROXY}:2375

    environment:
      # Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc).
      #   0 - revoke access
      #   1 - grant access
      CONTAINERS: 1 # crowdsec, diun, homepage. dozzle
      IMAGES: 1 # diun
      INFO: 1 # crowdsec

    labels:
      - diun.enable=true
      - homepage.group=Back End
      - homepage.name=Docker Socket Proxy

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    
    healthcheck:
      test: wget --spider http://${SERVER_URL}:${PORT_SOCKY_PROXY}/version || exit 1
      interval: "30s"
      timeout: "5s"
      retries: 3
      start_period: "30s"

    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 32M

    restart: always



####################
# Docker Environment
####################

networks:
  socky_proxy-net:
    name: socky_proxy-net
    external: true
